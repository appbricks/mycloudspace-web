name: Publish production release site

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    # Setup default environment for running Terraform
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_env: ''
      TF_VAR_domain: appbricks.io
      TF_VAR_publish_path: ${{ github.workspace }}/public

    steps:
    
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Download published release
    - name: Download site content
      uses: fabriciobastian/download-release-asset-action@v1.0.6
      with:
        version: latest
        repository: ${{ github.repository }}
        file: site-content.zip
        out: ./

    - run: unzip site-content.zip

    # Initialize a new or existing Terraform working
    # directory by creating initial files, loading any
    # remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        echo "Initializing for production environment."
        terraform -chdir=build/publish init \
          -backend-config="key=website/appbricks-io" \
          -backend-config="bucket=appbricks-tfstate-useast1"

    # Generates an execution plan for Terraform
    - name: Site update plan (Terraform Plan)
      run: |
        echo "Publish plan for production environment"
        terraform -chdir=build/publish plan

    # Apply Terraform plan and deploy site to a dev url
    - name: Publish Site (Terraform Apply)
      run: |
        echo "Publishing to production environment."
        terraform -chdir=build/publish apply -auto-approve
