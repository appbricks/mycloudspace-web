name: Build and Publish Dev Site

on:
  workflow_dispatch:
    input:
      nodeVersion:
        description: 'Node version'
        required: true
        default: '12.x'
  push:
    branches: [ dev ]
    paths:
    - 'site/**'
    - 'src/**'
    - 'gatsby-browser.js'
    - 'gatsby-config.js'
    - 'gatsby-node.js'
    - 'gatsby-ssr.js'
    - 'package.json'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Use Node.js ${{ github.event.inputs.logLevel }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ github.event.inputs.logLevel }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Gatsby CLI
      run: npm install -g gatsby-cli

    - name: Create AWS Amplify configuration file
      run: echo -e "${{ secrets.AWS_AMPLIFY_EXPORTS }}" > src/aws-exports.ts

    - name: Build site content
      run: npm install && gatsby build

    - name: Upload site content
    - uses: actions/upload-artifact@master
      with:
        name: site-content
        path: ${{ github.workspace }}/public
        
  publish:
    needs: build
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions
    # runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_domain: appbricks.io
      TF_VAR_publish_path: ${{ github.workspace }}/public

    steps:
    
    - name: Check branch is not master/main
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: exit 1

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Install the latest version of AWS CLI
    - name: Install AWS CLI
      uses: chrislennon/action-aws-cli@v1.1
    
    # Retrieve built content from previous job
    - name: Download site content
      uses: actions/download-artifact@master
      with:
        name: site-content
        path: ${{ github.workspace }}/public

    # Initialize a new or existing Terraform working 
    # directory by creating initial files, loading any 
    # remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        export TF_VAR_env=${GITHUB_REF##*/}
        env
        ls -al
        #terraform init \
        #  -backend-config="key=website/appbricks-io_${TF_VAR_env}" \
        #  -backend-config="bucket=appbricks-tfstate-useast1" \
        #  build/publish

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
    #  run: terraform fmt -check build/publish

    # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   run: terraform plan build/publish

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
#     - name: Terraform Apply
#       if: github.ref == 'refs/heads/master' && github.event_name == 'push'
#       run: terraform apply -auto-approve
