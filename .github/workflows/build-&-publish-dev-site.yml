name: Build and publish dev site

on:
  workflow_dispatch:
    inputs:
      nodeVersion:
        description: 'Node version'
        required: true
        default: '14.x'
  push:
    branches: [ dev ]
    paths:
    - 'site/**'
    - 'src/**'
    - 'gatsby-browser.js'
    - 'gatsby-config.js'
    - 'gatsby-node.js'
    - 'gatsby-ssr.js'
    - 'package.json'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    # Setup environment for running AWS CLI
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      ENV: dev

    steps:

    # Ensure this action is not master/main branches
    - name: Check branch is not master/main
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: exit 1

    # Install NodeJS
    - name: Use Node.js ${{ github.event.inputs.nodeVersion }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ github.event.inputs.nodeVersion }}

    - run: sudo npm install -g gatsby-cli

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    #
    # Configure and run site content build
    #

    - name: Create AWS Amplify configuration file
      run: build/cognito/configure.sh -e ${ENV}

    - name: Build site content
      run: |
        sudo su -
        npm install
        gatsby build

    - name: Upload site content
      uses: actions/upload-artifact@master
      with:
        name: site-content
        path: ${{ github.workspace }}/public

  publish:
    needs: build
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    # Setup default environment for running Terraform
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_domain: appbricks.io
      TF_VAR_publish_path: ${{ github.workspace }}/public

    steps:

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Retrieve built content from previous job
    - name: Download site content
      uses: actions/download-artifact@master
      with:
        name: site-content
        path: ${{ github.workspace }}/public

    # Initialize a new or existing Terraform working
    # directory by creating initial files, loading any
    # remote state, downloading modules, etc.
    - name: Terraform Init
      run: |
        export TF_VAR_env=${GITHUB_REF##*/}
        terraform init \
          -backend-config="key=website/appbricks-io_${TF_VAR_env}" \
          -backend-config="bucket=appbricks-tfstate-useast1" \
          build/publish

    # Generates an execution plan for Terraform
    - name: Site update plan (Terraform Plan)
      run: |
        export TF_VAR_env=${GITHUB_REF##*/}
        terraform plan \
          build/publish

    # Apply Terraform plan and deploy site to a dev url
    - name: Publish Site (Terraform Apply)
      run: |
        export TF_VAR_env=${GITHUB_REF##*/}
        terraform apply -auto-approve \
          build/publish
